<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Caster wheel link & joint macro -->
  <xacro:macro name="caster_wheel" 
               params="prefix reflect wheel_props locationright:=${0} scale:='1.0'">

    <!-- caster base (fixed) -->
    <link name="${prefix}_caster_base_link">
      <xacro:box_inertia 
        m="${wheel_props['base']['mass']}"
        x="${wheel_props['base']['size']['x']}"
        y="${wheel_props['base']['size']['y']}"
        z="${wheel_props['base']['size']['z']}"
        o_xyz="0.0 0.0 ${-wheel_props['base']['size']['z']/2.0}"
        o_rpy="0.0 0.0 0.0" />
      
      <xacro:if value="${wheel_props['base']['mesh'] != ''}">
        <visual>
          <origin xyz="0 0 ${-scale * wheel_props['base']['size']['z']/2.0}" rpy="0 0 0" />
          <geometry>
            <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['base']['mesh']}" scale="${scale} ${scale} ${scale}" />
          </geometry>
          <material name="silver"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['base']['mesh'] == ''}">
        <visual>
          <origin xyz="0 0 ${-scale * wheel_props['base']['size']['z']/2.0}" rpy="0 0 0" />
          <geometry>
            <box size="${scale * wheel_props['base']['size']['x']} ${scale * wheel_props['base']['size']['y']} ${scale * wheel_props['base']['size']['z']}" />
          </geometry>
          <material name="red"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 ${-scale * wheel_props['base']['size']['z']/2.0}" rpy="0 0 0" />
        <geometry>
          <box size="${scale * wheel_props['base']['size']['x']} ${scale * wheel_props['base']['size']['y']} ${scale * wheel_props['base']['size']['z']}" />
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_caster_base_joint" type="fixed">
      <origin xyz="${scale * wheel_props['base']['dx']} ${-scale * wheel_props['base']['dy'] * locationright} ${scale * wheel_props['base']['dz']}" 
              rpy="0 0 0" />
      <parent link="base_link" />
      <child link="${prefix}_caster_base_link" />
    </joint>

    <gazebo reference="${prefix}_caster_base_link">
      <material>Gazebo/Grey</material>
    </gazebo>

    <!-- caster hub -->
    <link name="${prefix}_caster_rotation_link">
      <xacro:box_inertia 
        m="${wheel_props['hub']['mass']}"
        x="${wheel_props['hub']['size']['x']}"
        y="${wheel_props['hub']['size']['y']}"
        z="${wheel_props['hub']['size']['z']}"
        o_xyz="0.0 0.0 ${-wheel_props['hub']['size']['z']/2.0}"
        o_rpy="0.0 0.0 0.0" />
      
      <xacro:if value="${wheel_props['hub']['mesh'] != ''}">
        <visual>
          <origin xyz="0 0 ${-scale * wheel_props['hub']['size']['z']/2.0}" rpy="0 0 0" />
          <geometry>
            <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['hub']['mesh']}" scale="${scale} ${scale} ${scale}" />
          </geometry>
          <material name="silver"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['hub']['mesh'] == ''}">
        <visual>
          <origin xyz="0 0 ${-scale * wheel_props['hub']['size']['z']/2.0}" rpy="0 0 0" />
          <geometry>
            <box size="${scale * wheel_props['hub']['size']['x']} ${scale * wheel_props['hub']['size']['y']} ${scale * wheel_props['hub']['size']['z']}" />
          </geometry>
          <material name="red"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 ${-scale * wheel_props['hub']['size']['z']/2.0}" rpy="0 0 0" />
        <geometry>
          <box size="${scale * wheel_props['hub']['size']['x']} ${scale * wheel_props['hub']['size']['y']} ${scale * wheel_props['hub']['size']['z']}" />
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_caster_rotation_joint" type="continuous">
      <origin xyz="${wheel_props['hub']['dx']} ${-wheel_props['hub']['dy'] * locationright} ${wheel_props['hub']['dz']}" 
              rpy="0 0 0" />
      <parent link="${prefix}_caster_base_link" />
      <child link="${prefix}_caster_rotation_link" />
      <axis xyz="0 0 1" />
    </joint>

    <!-- caster wheel -->
    <link name="${prefix}_caster_wheel_link">
      <xacro:cylinder_inertia 
        m="${wheel_props['wheel']['mass']}"
        r="${wheel_props['wheel']['radius']}"
        l="${wheel_props['wheel']['length']}" />

      <xacro:if value="${wheel_props['wheel']['mesh'] != ''}">
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['wheel']['mesh']}" scale="${scale} ${scale} ${scale}" />
          </geometry>
          <material name="black"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['wheel']['mesh'] == ''}">
        <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
          <geometry>
            <cylinder length="${scale * wheel_props['wheel']['length']}" radius="${scale * wheel_props['wheel']['radius']}" />
          </geometry>
          <material name="red"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder length="${scale * wheel_props['wheel']['length']}" radius="${scale * wheel_props['wheel']['radius']}" />
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_caster_wheel_joint" type="continuous">
      <origin xyz="${scale * wheel_props['wheel']['dx']} ${-scale * wheel_props['wheel']['dy'] * locationright} ${scale * wheel_props['wheel']['dz']}" 
              rpy="0 0 0" />
      <parent link="${prefix}_caster_rotation_link" />
      <child link="${prefix}_caster_wheel_link" />
      <axis xyz="0 1 0" />
    </joint>
  </xacro:macro>

</robot>
